#!/usr/bin/python

# FIXME: utf-8 encode


def inventory_areca_hba_raidsets(info):
    inventory = []

    # not sure why i end up with my info double stacked
    # but i'm sure it's me.
    for line in info[0]:
        if len(line) == 5:
            rs_id, rs_name, rs_state, rs_mem_sz, rs_mem_names = line
            inventory.append((rs_id, None))
    return inventory

def check_areca_hba_raidsets(item, _no_params, info):
    for line in info[0]:
        rs_id, rs_name, rs_state, rs_mem_sz, rs_mem_names = line

        if rs_id == item:
            if   rs_state == "Normal":
                state = 0
            elif rs_state == "Rebuilding":
                state = 1
            # I hope Offline is correct.
            elif rs_state in [ "Degraded", "Offline" ]:
                state = 2
            # Any state we don't know.
            else:
                state = 3

            msg = "%s is %s. (members: %s)" % (rs_name, rs_state, rs_mem_names)
            return (state, nagios_state_names[state] + " - " + msg)
        
    return (3, "UNKW - Raidset not found in agent output")


check_info["areca_hba_raidsets"]  = {
    "check_function"      : check_areca_hba_raidsets,
    "inventory_function"  : inventory_areca_hba_raidsets,
    "has_perfdata"        : True,
    "service_description" : "Raid set %s",
    # Find Areca SAS MIB
    "snmp_scan_function"  : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.18928.1"),
    "snmp_info"           : [(".1.3.6.1.4.1.18928.1.2.4.1.1", 
        # Below each enclosure there's the following structure for disk data
                                  [  #"2", "4" 
          "1", # Raidset id
          "2", # Raidset name
          "4", # Raidset State
          "7", # Member disk size
          "8", # Member disk names and states
                                  ]
                            )],
}

