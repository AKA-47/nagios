#!/usr/bin/python
# 
# unsupported check_mk plugin for xen
# Florian Heigl <fh@mathias-kettner.de>

def inventory_xen_vms(checkname, info):
    return [ (("%s" % line[1] ), None) for line in info if line[0] == "vm" ]


def check_xen_vms(item, params, info):
    for line in info:
        xentype = line[0]
        vmname = line[1]
        status = line[2]
        if vmname == item:
 	    if status == "running":
	        return (0, "OK - VM %s status is %s" % (item, status))
            elif status == "paused":
                return (1, "WARN - VM %s status is %s" % (item, status))
            elif status == "crashed":
                return (2, "CRIT - VM %s status is %s" % (item, status))
            else:
                return (3, "UNKNOWN - VM %s status unknown" % (item, status))
            return

check_info['xen.vms'] = \
        (check_xen_vms, "VM %s", 0, inventory_xen_vms)



xen_mem_default_levels = (80,90)

def inventory_xen_mem(checkname, info):
    for line in info:
        if line[0] == "mem":
            return [ (None, 'xen_mem_default_levels') ]


def check_xen_mem(checkname, params, info):
    for line in info:
        if line[0] == "mem":
            mem_total = int(line[1])
            mem_used  = mem_total - int(line[2])
            
            perc_used = mem_used * 100 / float(mem_total) 

            print ("%s of %s MB used. ( %d%% )" % (mem_used, mem_total, perc_used))

    return (3, "UNKNOWN")

            
       


check_info['xen.mem'] = (check_xen_mem, "Memory used", 0, inventory_xen_mem)
